import joblibimport numpy as npimport refrom nltk.corpus import stopwordsfrom nltk.stem.porter import PorterStemmer# Load the model and vectorizermodel = joblib.load('logistic_regression_model.pkl')vectorizer = joblib.load('tfidf_vectorizer.pkl')# Initialize the stemmerport_stem = PorterStemmer()def preprocess_text(text):    """Preprocess the input text by stemming and removing stopwords."""    stemmed_content = re.sub('[^a-zA-Z]', ' ', text)    stemmed_content = stemmed_content.lower()    stemmed_content = stemmed_content.split()    stemmed_content = [port_stem.stem(word) for word in stemmed_content if not word in stopwords.words('english')]    stemmed_content = ' '.join(stemmed_content)    return stemmed_contentdef predict_fake_news(text):    """Predict whether the input text is fake news."""    # Preprocess the text    preprocessed_text = preprocess_text(text)    # Transform the text using the vectorizer    transformed_text = vectorizer.transform([preprocessed_text])    # Make a prediction using the model    prediction = model.predict(transformed_text)    # Return the prediction result    return 'Fake News' if prediction[0] == 1 else 'Real News'if __name__ == "__main__":    # Example usage    news_paragraph = input("Enter a news paragraph: ")    result = predict_fake_news(news_paragraph)    print('\n')    print(f"The news is: {result}")